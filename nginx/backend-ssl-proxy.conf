# 为内网后端配置SSL的Nginx配置
# 在192.168.1.90上创建内网SSL代理

upstream backend_http {
    server 127.0.0.1:4005;  # 实际后端HTTP服务
    keepalive 16;
}

# 内网后端SSL代理
server {
    listen 4006 ssl http2;  # 新的SSL端口
    server_name 192.168.1.90 nas.pznas.com localhost;
    
    # SSL配置 - 可以使用自签名证书
    ssl_certificate /etc/ssl/certs/backend-internal.crt;
    ssl_certificate_key /etc/ssl/private/backend-internal.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    # 允许自签名证书
    ssl_verify_client off;
    
    # CORS配置 - 允许前端域名
    add_header Access-Control-Allow-Origin "https://nas.pznas.com:7990" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials true always;
    
    # 预检请求处理
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "https://nas.pznas.com:7990";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        add_header Access-Control-Allow-Credentials true;
        add_header Access-Control-Max-Age 1728000;
        add_header Content-Type "text/plain charset=UTF-8";
        add_header Content-Length 0;
        return 204;
    }
    
    # 代理到实际后端
    location / {
        proxy_pass http://backend_http;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # 超时配置
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 120s;
    }
    
    # WebSocket支持
    location /socket.io/ {
        proxy_pass http://backend_http/socket.io/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
